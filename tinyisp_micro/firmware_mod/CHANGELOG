2006-03-12 version 1.0

o Initial release.


2006-03-31 version 1.1

o Updated patches/avrdude-5.1.diff. The modifications to Makefile.in
  are now included, so that automake1.9 is not needed to build avrdude.

o Changed the dependencies in utils/Makefile so that it will restart
  after a compilation failure.

o Shaved off a couple of instructions in usbtiny/usb.c. The code now
  fits in 2K when compiled with gcc-4.0.2, provided USBTINY_VENDOR_NAME
  and USBTINY_DEVICE_NAME are undefined. Gcc-4.0.2 produces about 10%
  more code than gcc-3.4.3!


2006-07-12 version 1.2

o Moved the original SPI application to the spi/ subdirectory, and
  added a new IR receiver and LCD controller application in the ir/
  subdirectory.

o Added an optional additional endpoint (for the ir application).

o Reduced the size of the spi application by a couple of bytes.

o Converted the usbtiny.py script to a Python module that defines
  a class USBtiny. Added test scripts to both application directories
  that use this class.

o Created a common make include file for the applications, and a global
  Makefile that recursively runs make in all subdirectories.


2006-12-15 version 1.3

o Commented out the USBTINY_VENDOR_NAME/USBTINY_DEVICE_NAME macros,
  to make the code fit when compiled with gcc-4.1.0, which seems to
  be the standard version in most distributions these days.

o Added a pull-down resistor in the ir schematic to avoid a hang in
  the LCD initialization code when no LCD is attached. The LCD code
  can now be disabled by defining LCD_PRESENT as 0.

o The 1K5 pullup of the ir application is now controlled by an I/O pin,
  so that the device disappears from the USB bus when it is flashed
  in-circuit, and is automatically recognized when it comes out of RESET
  (idea from Reinhard Max).

o Updated lirc patch with a gap calculation fix from Reinhard Max.

o Fixed some build problems of the libusb python wrapper, and added
  proper error reporting.

o Made the flash and SRAM sizes configurable in the Makefile.

